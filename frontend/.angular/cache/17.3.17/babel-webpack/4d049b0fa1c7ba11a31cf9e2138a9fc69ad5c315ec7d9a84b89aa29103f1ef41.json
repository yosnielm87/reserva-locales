{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { inject } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n    this.auth = inject(AuthService);\n    this.router = inject(Router);\n    this.form = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.form.invalid) return;\n    const {\n      fullName,\n      email,\n      password\n    } = this.form.value;\n    this.auth.register(email, password, fullName).subscribe({\n      next: () => {\n        alert('Cuenta creada');\n        this.router.navigate(['/login']);\n      },\n      error: err => alert(err.error.detail || 'Error al registrarse')\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 17,\n      vars: 2,\n      consts: [[1, \"register-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"fullName\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/login\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Registro\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Nombre completo \");\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Email \");\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Contrase\\u00F1a \");\n          i0.ɵɵelement(12, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 5);\n          i0.ɵɵtext(14, \"Crear cuenta\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"a\", 6);\n          i0.ɵɵtext(16, \"Ya tengo cuenta\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".register-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 60px auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n}\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: 10px 0;\\n}\\nbutton[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    padding: 8px 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksY0FBYztJQUNkLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDYwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcbmxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcbn1cclxuYnV0dG9uIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBwYWRkaW5nOiA4cHggMTZweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormBuilder","Validators","Router","AuthService","ReactiveFormsModule","inject","RegisterComponent","constructor","fb","auth","router","form","group","fullName","required","email","password","minLength","onSubmit","invalid","value","register","subscribe","next","alert","navigate","error","err","detail","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["D:\\Sistema de Reserva de Locales\\reserva-locales\\frontend\\src\\app\\components\\register\\register.component.ts","D:\\Sistema de Reserva de Locales\\reserva-locales\\frontend\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { inject } from '@angular/core';\r\n\r\n@Component({\r\nselector: 'app-register',\r\nstandalone: true,\r\nimports: [ReactiveFormsModule],\r\ntemplateUrl: './register.component.html',\r\nstyleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\nfb = inject(FormBuilder);\r\nauth = inject(AuthService);\r\nrouter = inject(Router);\r\nform = this.fb.group({\r\nfullName: ['', Validators.required],\r\nemail: ['', [Validators.required, Validators.email]],\r\npassword: ['', [Validators.required, Validators.minLength(6)]]\r\n});\r\nonSubmit() {\r\nif (this.form.invalid) return;\r\nconst { fullName, email, password } = this.form.value;\r\nthis.auth.register(email!, password!, fullName!).subscribe({\r\nnext: () => {\r\nalert('Cuenta creada');\r\nthis.router.navigate(['/login']);\r\n},\r\nerror: (err) => alert(err.error.detail || 'Error al registrarse')\r\n});\r\n}\r\n}","<div class=\"register-container\">\r\n  <h2>Registro</h2>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <label>Nombre completo\r\n      <input type=\"text\" formControlName=\"fullName\" />\r\n    </label>\r\n    <label>Email\r\n      <input type=\"email\" formControlName=\"email\" />\r\n    </label>\r\n    <label>Contraseña\r\n      <input type=\"password\" formControlName=\"password\" />\r\n    </label>\r\n    <button type=\"submit\" [disabled]=\"form.invalid\">Crear cuenta</button>\r\n  </form>\r\n  <a routerLink=\"/login\">Ya tengo cuenta</a>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}