{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { inject } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor() {\n    this.fb = inject(FormBuilder);\n    this.auth = inject(AuthService);\n    this.router = inject(Router);\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.form.invalid) return;\n    const {\n      email,\n      password\n    } = this.form.value;\n    this.auth.login(email, password).subscribe({\n      next: () => {\n        if (this.auth.isAdmin()) this.router.navigate(['/admin']);else this.router.navigate(['/user']);\n      },\n      error: err => alert(err.error.detail || 'Error al iniciar sesión')\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"login-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [\"routerLink\", \"/register\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"label\");\n          i0.ɵɵtext(5, \"Email \");\n          i0.ɵɵelement(6, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"label\");\n          i0.ɵɵtext(8, \"Contrase\\u00F1a \");\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 4);\n          i0.ɵɵtext(11, \"Entrar\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"a\", 5);\n          i0.ɵɵtext(13, \"\\u00BFNo tienes cuenta? Reg\\u00EDstrate\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 60px auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n}\\nlabel[_ngcontent-%COMP%] {\\ndisplay: block;\\nmargin: 10px 0;\\n}\\nbutton[_ngcontent-%COMP%] {\\nmargin-top: 10px;\\npadding: 8px 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0EsY0FBYztBQUNkLGNBQWM7QUFDZDtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLGlCQUFpQjtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIG1hcmdpbjogNjBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxubGFiZWwge1xyXG5kaXNwbGF5OiBibG9jaztcclxubWFyZ2luOiAxMHB4IDA7XHJcbn1cclxuYnV0dG9uIHtcclxubWFyZ2luLXRvcDogMTBweDtcclxucGFkZGluZzogOHB4IDE2cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormBuilder","Validators","Router","AuthService","ReactiveFormsModule","inject","LoginComponent","constructor","fb","auth","router","form","group","email","required","password","onSubmit","invalid","value","login","subscribe","next","isAdmin","navigate","error","err","alert","detail","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["D:\\Sistema de Reserva de Locales\\reserva-locales\\frontend\\src\\app\\components\\login\\login.component.ts","D:\\Sistema de Reserva de Locales\\reserva-locales\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { inject } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule],\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n    })\r\n    export class LoginComponent {\r\n    fb = inject(FormBuilder);\r\n    auth = inject(AuthService);\r\n    router = inject(Router);\r\n    form = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', Validators.required]\r\n    });\r\n    onSubmit() {\r\n    if (this.form.invalid) return;\r\n    const { email, password } = this.form.value;\r\n    this.auth.login(email!, password!).subscribe({\r\n    next: () => {\r\n    if (this.auth.isAdmin()) this.router.navigate(['/admin']);\r\n    else this.router.navigate(['/user']);\r\n    },\r\n    error: (err) => alert(err.error.detail || 'Error al iniciar sesión')\r\n    });\r\n    }\r\n}","<div class=\"login-container\">\r\n  <h2>Iniciar Sesión</h2>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <label>Email\r\n      <input type=\"email\" formControlName=\"email\" />\r\n    </label>\r\n    <label>Contraseña\r\n      <input type=\"password\" formControlName=\"password\" />\r\n    </label>\r\n    <button type=\"submit\" [disabled]=\"form.invalid\">Entrar</button>\r\n  </form>\r\n  <a routerLink=\"/register\">¿No tienes cuenta? Regístrate</a>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}